#!/bin/sh

CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/hypr/hyprland.conf"

if [ $# -eq 0 ]; then
	echo "Error: No monitor IDs provided."
	echo "Usage: $0 <monitor1> [monitor2] [monitor3] ..."
	exit 1
fi

# Function to disable a monitor
disable_monitor() {
	local MONITOR="$1"
	
	if hyprctl keyword monitor "${MONITOR},disable"; then
		notify-send -i display "Monitor Status" "Disabled monitor: ${MONITOR}"
		echo "Disabled monitor: ${MONITOR}"
		return 0
	else
		notify-send -u critical -i error "Monitor Status" "Failed to disable: ${MONITOR}"
		echo "Error: Failed to disable monitor: ${MONITOR}" >&2
		return 1
	fi
}

# Function to enable a monitor (without reload)
enable_monitor() {
	local MONITOR="$1"
	
	MONITOR_CONFIG=$(grep -E "^monitor *= *${MONITOR}," "${CONFIG}")
	if [ -z "${MONITOR_CONFIG}" ]; then
		notify-send -u critical -i error "Monitor Status" "Unable to find monitor config for ${MONITOR} in ${CONFIG}"
		echo "Error: Unable to find monitor config for ${MONITOR} in ${CONFIG}" >&2
		return 1
	fi
	
	if hyprctl keyword "${MONITOR_CONFIG}"; then
		echo "Configured monitor: ${MONITOR}"
		return 0
	else
		notify-send -u critical -i error "Monitor Status" "Failed to enable: ${MONITOR}"
		echo "Error: Failed to enable monitor: ${MONITOR}" >&2
		return 1
	fi
}

# Process each monitor argument
SUCCESS_COUNT=0
TOTAL_COUNT=$#
ENABLED_MONITORS=""
ENABLED_COUNT=0

for MONITOR in "$@"; do
	echo "Processing monitor: ${MONITOR}"
	
	if hyprctl monitors | grep -q "^Monitor ${MONITOR}"; then
		# Monitor is currently active, disable it
		if disable_monitor "${MONITOR}"; then
			SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
		fi
	else
		# Monitor is disabled, enable it
		if enable_monitor "${MONITOR}"; then
			SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
			ENABLED_MONITORS="${ENABLED_MONITORS} ${MONITOR}"
			ENABLED_COUNT=$((ENABLED_COUNT + 1))
		fi
	fi
done

# Run hyprctl reload only once if any monitors were enabled
if [ ${ENABLED_COUNT} -gt 0 ]; then
	echo "Reloading Hyprland configuration..."
	if hyprctl reload; then
		# Send individual notifications for enabled monitors
		for MONITOR in ${ENABLED_MONITORS}; do
			notify-send -i display "Monitor Status" "Enabled monitor: ${MONITOR}"
			echo "Enabled monitor: ${MONITOR}"
		done
	else
		notify-send -u critical -i error "Monitor Status" "Failed to reload Hyprland configuration"
		echo "Error: Failed to reload Hyprland configuration" >&2
		# Reduce success count since reload failed
		SUCCESS_COUNT=$((SUCCESS_COUNT - ENABLED_COUNT))
	fi
fi
